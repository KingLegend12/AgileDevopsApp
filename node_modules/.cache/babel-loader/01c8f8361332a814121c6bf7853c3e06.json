{"ast":null,"code":"import { createSlicer } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\"\n};\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    loginPending: state => {\n      state.isLoading = true;\n    },\n    loginSuccess: state => {\n      state.isLoading = false;\n      state.isAuth = true;\n      state.error = \"\";\n    },\n    loginFail: (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.error = payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = loginSlice;\nexport const {\n  loginPending,\n  loginSuccess,\n  loginFail\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/drissjd/Desktop/InternShipApp/internship_frontend/src/components/login/Login.Slice.js"],"names":["createSlicer","initialState","isLoading","isAuth","error","loginSlice","createSlice","name","reducers","loginPending","state","loginSuccess","loginFail","payload","reducer","actions"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,UAAU,GAAGC,WAAW,CAAC;AAC7BC,EAAAA,IAAI,EAAE,OADuB;AAE7BN,EAAAA,YAF6B;AAG7BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAGC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRS,IAAAA,YAAY,EAAGD,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,MAAN,GAAe,IAAf;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAc,EAAd;AACD,KARO;AASRQ,IAAAA,SAAS,EAAE,CAACF,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,KAAwB;AACjCH,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACN,KAAN,GAAcS,OAAd;AACD;AAZO;AAHmB,CAAD,CAA9B;AAmBA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBV,UAA7B;AAEA,OAAO,MAAM;AAAEI,EAAAA,YAAF;AAAgBE,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,IAA4CG,OAAlD;AAEP,eAAeD,OAAf","sourcesContent":["import { createSlicer } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\",\n};\n\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    loginPending: (state) => {\n      state.isLoading = true;\n    },\n    loginSuccess: (state) => {\n      state.isLoading = false;\n      state.isAuth = true;\n      state.error = \"\";\n    },\n    loginFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n  },\n});\n\nconst { reducer, actions } = loginSlice;\n\nexport const { loginPending, loginSuccess, loginFail } = actions;\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}