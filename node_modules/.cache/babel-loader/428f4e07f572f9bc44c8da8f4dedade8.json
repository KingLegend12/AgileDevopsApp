{"ast":null,"code":"var _jsxFileName = \"/Users/drissjd/Desktop/InternShipApp/internship_frontend/src/components/private-route/PrivateRoute.comp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { loginSuccess } from \"../login/Login.Slice\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\nimport { fetchNewAccessJWT } from \"../../api/userApi\";\nimport { DefaultLayout } from \"../../layout/DefaultLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    isAuth\n  } = useSelector(state => state.login);\n  const {\n    user\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const updateAccessJWT = async () => {\n      const result = await fetchNewAccessJWT();\n      result && dispatch(loginSuccess());\n    };\n\n    !user._id && dispatch(getUserProfile());\n    !sessionStorage.getItem(\"accessJWT\") && localStorage.getItem(\"tickets\") && updateAccessJWT();\n    !isAuth && sessionStorage.getItem(\"accessJWT\") && dispatch(loginSuccess());\n  }, [dispatch, isAuth, user._id]);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => isAuth ? /*#__PURE__*/_jsxDEV(DefaultLayout, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"KkgCihAq7ZnWmz0GFQ43CE3kTTY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/drissjd/Desktop/InternShipApp/internship_frontend/src/components/private-route/PrivateRoute.comp.js"],"names":["React","useEffect","useSelector","useDispatch","Route","Redirect","loginSuccess","getUserProfile","fetchNewAccessJWT","DefaultLayout","PrivateRoute","children","rest","dispatch","isAuth","state","login","user","updateAccessJWT","result","_id","sessionStorage","getItem","localStorage","location","pathname","from"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AAEA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,SAASC,aAAT,QAA8B,4BAA9B;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AACrD,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWf,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAA5B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,eAAe,GAAG,YAAY;AAClC,YAAMC,MAAM,GAAG,MAAMX,iBAAiB,EAAtC;AACAW,MAAAA,MAAM,IAAIN,QAAQ,CAACP,YAAY,EAAb,CAAlB;AACD,KAHD;;AAKA,KAACW,IAAI,CAACG,GAAN,IAAaP,QAAQ,CAACN,cAAc,EAAf,CAArB;AAEA,KAACc,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAD,IACEC,YAAY,CAACD,OAAb,CAAqB,SAArB,CADF,IAEEJ,eAAe,EAFjB;AAIA,KAACJ,MAAD,IAAWO,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,IAAkDT,QAAQ,CAACP,YAAY,EAAb,CAA1D;AACD,GAbQ,EAaN,CAACO,QAAD,EAAWC,MAAX,EAAmBG,IAAI,CAACG,GAAxB,CAbM,CAAT;AAeA,sBACE,QAAC,KAAD,OACMR,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEY,MAAAA;AAAF,KAAD,KACNV,MAAM,gBACJ,QAAC,aAAD;AAAA,gBAAgBH;AAAhB;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFc,QAAAA,QAAQ,EAAE,GADR;AAEFV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,IAAI,EAAEF;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArCM;;GAAMd,Y;UACMP,W,EACED,W,EACFA,W;;;KAHNQ,Y","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { loginSuccess } from \"../login/Login.Slice\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\n\nimport { fetchNewAccessJWT } from \"../../api/userApi\";\n\nimport { DefaultLayout } from \"../../layout/DefaultLayout\";\n\nexport const PrivateRoute = ({ children, ...rest }) => {\n  const dispatch = useDispatch();\n  const { isAuth } = useSelector((state) => state.login);\n  const { user } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const updateAccessJWT = async () => {\n      const result = await fetchNewAccessJWT();\n      result && dispatch(loginSuccess());\n    };\n\n    !user._id && dispatch(getUserProfile());\n\n    !sessionStorage.getItem(\"accessJWT\") &&\n      localStorage.getItem(\"tickets\") &&\n      updateAccessJWT();\n\n    !isAuth && sessionStorage.getItem(\"accessJWT\") && dispatch(loginSuccess());\n  }, [dispatch, isAuth, user._id]);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuth ? (\n          <DefaultLayout>{children}</DefaultLayout>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}