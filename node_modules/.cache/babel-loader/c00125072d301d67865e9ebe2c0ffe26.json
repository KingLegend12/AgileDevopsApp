{"ast":null,"code":"import _slicedToArray from\"/Users/drissjd/Desktop/InternShipApp/internship_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Container,Row,Col,Button,Spinner,Alert}from\"react-bootstrap\";import{PageBreadcrumb}from\"../../components/breadcrumb/Breadcrumb.comp\";import tickets from\"../../assets/data/dummy-tickets.json\";import{MessageHistory}from\"../../components/message-history/MessageHistory.comp\";import{UpdateTicket}from\"../../components/update-ticket/UpdateTicket.comp\";import{useParams}from\"react-router-dom\";import{fetchSingleTicket,closeTicket}from\"../ticket-lists/ticketsAction\";import{useDispatch,useSelector}from\"react-redux\";import{Header}from\"../../layout/partial/Header.comp\";import{resetResponseMsg}from\"../ticket-lists/ticketSlice\";//const ticket = tickets[0];\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Ticket=function Ticket(){var _useParams=useParams(),tId=_useParams.tId;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),ticket=_useState4[0],setTicket=_useState4[1];var _useSelector=useSelector(function(state){return state.tickets;}),isLoading=_useSelector.isLoading,error=_useSelector.error,selectedTicket=_useSelector.selectedTicket,replyMsg=_useSelector.replyMsg,replyTicketError=_useSelector.replyTicketError;var dispatch=useDispatch();useEffect(function(){{/* for (let i = 0; i < tickets.length; i++) {\n      if (tickets[i].id == tId) {\n        setTicket(tickets[i]);\n        continue; //break the loop\n      }\n    } */}dispatch(fetchSingleTicket(tId));return function(){(replyMsg||replyTicketError)&&dispatch(resetResponseMsg());};},[message,tId,dispatch,replyMsg,replyTicketError]);var handleOnChange=function handleOnChange(e){setMessage(e.target.value);};var handleOnSubmit=function handleOnSubmit(){alert(\"submiitted\");};return/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(PageBreadcrumb,{page:\"Ticket\"})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{children:[isLoading&&/*#__PURE__*/_jsx(Spinner,{variant:\"primary\",animation:\"border\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),replyTicketError&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:replyTicketError}),replyMsg&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:replyMsg})]})}),/*#__PURE__*/_jsxs(Row,{children:[tId,/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"subject\",children:[\"Sujet: \",selectedTicket.subject]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date\",children:[\"Date de reclammation:\",\" \",selectedTicket.openAt&&new Date(selectedTicket.openAt).toLocaleString()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status\",children:[\"Status: \",selectedTicket.status]}),/*#__PURE__*/_jsxs(\"div\",{className:\"priority\",children:[\"Priorite \",selectedTicket.priority]})]}),/*#__PURE__*/_jsx(Col,{className:\"text-right\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline-info\",onClick:function onClick(){return dispatch(closeTicket(tId));},disabled:selectedTicket.status===\"Fermer\",children:\"Fermer le ticket\"})})]}),/*#__PURE__*/_jsx(Row,{className:\"mt-4\",children:/*#__PURE__*/_jsx(Col,{children:selectedTicket.conversations&&/*#__PURE__*/_jsx(MessageHistory,{msg:selectedTicket.conversations})})}),/*#__PURE__*/_jsx(\"hr\",{style:{backgroundColor:\"orange\"}}),/*#__PURE__*/_jsx(Row,{className:\"mt-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(UpdateTicket,{_id:tId})})})]}),\" \"]});};","map":{"version":3,"sources":["/Users/drissjd/Desktop/InternShipApp/internship_frontend/src/pages/ticket/Ticket.page.js"],"names":["React","useState","useEffect","Container","Row","Col","Button","Spinner","Alert","PageBreadcrumb","tickets","MessageHistory","UpdateTicket","useParams","fetchSingleTicket","closeTicket","useDispatch","useSelector","Header","resetResponseMsg","Ticket","tId","message","setMessage","ticket","setTicket","state","isLoading","error","selectedTicket","replyMsg","replyTicketError","dispatch","handleOnChange","e","target","value","handleOnSubmit","alert","subject","openAt","Date","toLocaleString","status","priority","conversations","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport tickets from \"../../assets/data/dummy-tickets.json\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchSingleTicket, closeTicket } from \"../ticket-lists/ticketsAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Header } from \"../../layout/partial/Header.comp\";\nimport { resetResponseMsg } from \"../ticket-lists/ticketSlice\";\n//const ticket = tickets[0];\nexport const Ticket = () => {\n  const { tId } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [ticket, setTicket] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    selectedTicket,\n    replyMsg,\n    replyTicketError,\n  } = useSelector((state) => state.tickets);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    {\n      /* for (let i = 0; i < tickets.length; i++) {\n      if (tickets[i].id == tId) {\n        setTicket(tickets[i]);\n        continue; //break the loop\n      }\n    } */\n    }\n    dispatch(fetchSingleTicket(tId));\n\n    return () => {\n      (replyMsg || replyTicketError) && dispatch(resetResponseMsg());\n    };\n  }, [message, tId, dispatch, replyMsg, replyTicketError]);\n  const handleOnChange = (e) => {\n    setMessage(e.target.value);\n  };\n  const handleOnSubmit = () => {\n    alert(\"submiitted\");\n  };\n  return (\n    <>\n      {\" \"}\n      <Header />\n      <Container>\n        <hr />\n        <Row>\n          <Col>\n            <PageBreadcrumb page=\"Ticket\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {replyTicketError && (\n              <Alert variant=\"danger\">{replyTicketError}</Alert>\n            )}\n            {replyMsg && <Alert variant=\"success\">{replyMsg}</Alert>}\n          </Col>\n        </Row>\n        <Row>\n          {tId}\n          <Col>\n            <div className=\"subject\">Sujet: {selectedTicket.subject}</div>\n            <div className=\"date\">\n              Date de reclammation:{\" \"}\n              {selectedTicket.openAt &&\n                new Date(selectedTicket.openAt).toLocaleString()}\n            </div>\n            <div className=\"status\">Status: {selectedTicket.status}</div>\n            <div className=\"priority\">Priorite {selectedTicket.priority}</div>\n          </Col>\n          <Col className=\"text-right\">\n            <Button\n              variant=\"outline-info\"\n              onClick={() => dispatch(closeTicket(tId))}\n              disabled={selectedTicket.status === \"Fermer\"}\n            >\n              Fermer le ticket\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            {selectedTicket.conversations && (\n              <MessageHistory msg={selectedTicket.conversations} />\n            )}\n          </Col>\n        </Row>\n        <hr style={{ backgroundColor: \"orange\" }} />\n        <Row className=\"mt-4\">\n          <Col>\n            <UpdateTicket _id={tId} />\n          </Col>\n        </Row>\n      </Container>{\" \"}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}