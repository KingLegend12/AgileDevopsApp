{"ast":null,"code":"import _regeneratorRuntime from\"/Users/drissjd/Desktop/AgileProject/agile_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/drissjd/Desktop/AgileProject/agile_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{openNewTicketPending,openNewTicketSuccess,openNewTicketFail}from\"./add-ticketSlicer\";import{createNewTicket}from\"../../api/ticketApi\";export var openNewTicket=function openNewTicket(frmData){return function(dispatch){return new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve,reject){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(openNewTicketPending());_context.next=4;return createNewTicket(frmData);case 4:result=_context.sent;if(!(result.status===\"error\")){_context.next=7;break;}return _context.abrupt(\"return\",dispatch(openNewTicketFail(result.message)));case 7:dispatch(openNewTicketSuccess(\"Ticket Envoyé avec success\"));_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(_context.t0);dispatch(openNewTicketFail(_context.t0.message));case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());};};","map":{"version":3,"sources":["/Users/drissjd/Desktop/AgileProject/agile_frontend/src/components/add-ticket-from/add-ticketAction.js"],"names":["openNewTicketPending","openNewTicketSuccess","openNewTicketFail","createNewTicket","openNewTicket","frmData","dispatch","Promise","resolve","reject","result","status","message","console","log"],"mappings":"+UAAA,OACEA,oBADF,CAEEC,oBAFF,CAGEC,iBAHF,KAIO,oBAJP,CAKA,OAASC,eAAT,KAAgC,qBAAhC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,QAAa,UAACC,QAAD,CAAc,CACtD,MAAO,IAAIC,CAAAA,OAAJ,0FAAY,iBAAOC,OAAP,CAAgBC,MAAhB,6IAEfH,QAAQ,CAACN,oBAAoB,EAArB,CAAR,CAFe,sBAIMG,CAAAA,eAAe,CAACE,OAAD,CAJrB,QAITK,MAJS,oBAKXA,MAAM,CAACC,MAAP,GAAkB,OALP,0DAMNL,QAAQ,CAACJ,iBAAiB,CAACQ,MAAM,CAACE,OAAR,CAAlB,CANF,SAQfN,QAAQ,CAACL,oBAAoB,CAAC,4BAAD,CAArB,CAAR,CARe,iFAUfY,OAAO,CAACC,GAAR,cACAR,QAAQ,CAACJ,iBAAiB,CAAC,YAAMU,OAAP,CAAlB,CAAR,CAXe,qEAAZ,mEAAP,CAcD,CAf4B,EAAtB","sourcesContent":["import {\n  openNewTicketPending,\n  openNewTicketSuccess,\n  openNewTicketFail,\n} from \"./add-ticketSlicer\";\nimport { createNewTicket } from \"../../api/ticketApi\";\n\nexport const openNewTicket = (frmData) => (dispatch) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      dispatch(openNewTicketPending());\n\n      const result = await createNewTicket(frmData);\n      if (result.status === \"error\") {\n        return dispatch(openNewTicketFail(result.message));\n      }\n      dispatch(openNewTicketSuccess(\"Ticket Envoyé avec success\"));\n    } catch (error) {\n      console.log(error);\n      dispatch(openNewTicketFail(error.message));\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}