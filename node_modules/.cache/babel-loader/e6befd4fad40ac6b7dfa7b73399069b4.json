{"ast":null,"code":"var _jsxFileName = \"/Users/drissjd/Desktop/InternShipApp/internship_frontend/src/pages/ticket/Ticket.page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport tickets from \"../../assets/data/dummy-tickets.json\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchSingleTicket, closeTicket } from \"../ticket-lists/ticketsAction\";\nimport { useDispatch, useSelector } from \"react-redux\"; //const ticket = tickets[0];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Ticket = () => {\n  _s();\n\n  const {\n    tId\n  } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [ticket, setTicket] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    selectedTicket,\n    replyMsg,\n    replyTicketError\n  } = useSelector(state => state.tickets);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    {\n      /* for (let i = 0; i < tickets.length; i++) {\n      if (tickets[i].id == tId) {\n        setTicket(tickets[i]);\n        continue; //break the loop\n      }\n      } */\n    }\n    dispatch(fetchSingleTicket(tId));\n  }, [message, tId, dispatch]);\n\n  const handleOnChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const handleOnSubmit = () => {\n    alert(\"submiitted\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(PageBreadcrumb, {\n          page: \"Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n          variant: \"primary\",\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), replyTicketError && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: replyTicketError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), replyMsg && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: replyMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [tId, /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subject\",\n          children: [\"Sujet: \", selectedTicket.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [\"Date de reclammation:\", \" \", selectedTicket.openAt && new Date(selectedTicket.openAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: [\"Status: \", selectedTicket.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"priority\",\n          children: [\"Priorite \", selectedTicket.priority]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"text-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-info\",\n          onClick: () => dispatch(closeTicket(tId)),\n          disabled: selectedTicket.status === \"Closed\",\n          children: \"Fermer le ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: selectedTicket.conversations && /*#__PURE__*/_jsxDEV(MessageHistory, {\n          msg: selectedTicket.conversations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        backgroundColor: \"orange\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(UpdateTicket, {\n          _id: tId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Ticket, \"+tb7lZt2oVv1sOPqo/9v4u0oHA4=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = Ticket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ticket\");","map":{"version":3,"sources":["/Users/drissjd/Desktop/InternShipApp/internship_frontend/src/pages/ticket/Ticket.page.js"],"names":["React","useState","useEffect","Container","Row","Col","Button","Spinner","Alert","PageBreadcrumb","tickets","MessageHistory","UpdateTicket","useParams","fetchSingleTicket","closeTicket","useDispatch","useSelector","Ticket","tId","message","setMessage","ticket","setTicket","isLoading","error","selectedTicket","replyMsg","replyTicketError","state","dispatch","handleOnChange","e","target","value","handleOnSubmit","alert","subject","openAt","Date","toLocaleString","status","priority","conversations","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport tickets from \"../../assets/data/dummy-tickets.json\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchSingleTicket, closeTicket } from \"../ticket-lists/ticketsAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//const ticket = tickets[0];\nexport const Ticket = () => {\n  const { tId } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [ticket, setTicket] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    selectedTicket,\n    replyMsg,\n    replyTicketError,\n  } = useSelector((state) => state.tickets);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    {\n      /* for (let i = 0; i < tickets.length; i++) {\n      if (tickets[i].id == tId) {\n        setTicket(tickets[i]);\n        continue; //break the loop\n      }\n    } */\n    }\n    dispatch(fetchSingleTicket(tId));\n  }, [message, tId, dispatch]);\n  const handleOnChange = (e) => {\n    setMessage(e.target.value);\n  };\n  const handleOnSubmit = () => {\n    alert(\"submiitted\");\n  };\n  return (\n    <Container>\n      <hr />\n      <Row>\n        <Col>\n          <PageBreadcrumb page=\"Ticket\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {replyTicketError && (\n            <Alert variant=\"danger\">{replyTicketError}</Alert>\n          )}\n          {replyMsg && <Alert variant=\"success\">{replyMsg}</Alert>}\n        </Col>\n      </Row>\n      <Row>\n        {tId}\n        <Col>\n          <div className=\"subject\">Sujet: {selectedTicket.subject}</div>\n          <div className=\"date\">\n            Date de reclammation:{\" \"}\n            {selectedTicket.openAt &&\n              new Date(selectedTicket.openAt).toLocaleString()}\n          </div>\n          <div className=\"status\">Status: {selectedTicket.status}</div>\n          <div className=\"priority\">Priorite {selectedTicket.priority}</div>\n        </Col>\n        <Col className=\"text-right\">\n          <Button\n            variant=\"outline-info\"\n            onClick={() => dispatch(closeTicket(tId))}\n            disabled={selectedTicket.status === \"Closed\"}\n          >\n            Fermer le ticket\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col>\n          {selectedTicket.conversations && (\n            <MessageHistory msg={selectedTicket.conversations} />\n          )}\n        </Col>\n      </Row>\n      <hr style={{ backgroundColor: \"orange\" }} />\n      <Row className=\"mt-4\">\n        <Col>\n          <UpdateTicket _id={tId} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}