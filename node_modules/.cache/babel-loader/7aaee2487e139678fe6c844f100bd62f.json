{"ast":null,"code":"var _jsxFileName = \"/Users/drissjd/Desktop/InternShipApp/internship_frontend/src/password-reset/PasswordReset.comp.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResetPassword = ({\n  handleOnChange,\n  handleOnResetSubmit,\n  email,\n  frmSwitcher\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-info text-center\",\n          children: \"R\\xE9initialiser le mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          onSubmit: handleOnResetSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Addresse Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              onChange: handleOnChange,\n              value: email,\n              placeholder: \"Entrez votre addresse email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Envoyer le code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          onClick: () => frmSwitcher(\"login\"),\n          children: \"Se Connecter ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ResetPassword;\nResetPassword.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  handleOnResetSubmit: PropTypes.func.isRequired,\n  frmSwitcher: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/drissjd/Desktop/InternShipApp/internship_frontend/src/password-reset/PasswordReset.comp.js"],"names":["React","PropTypes","Container","Row","Col","Form","Button","ResetPassword","handleOnChange","handleOnResetSubmit","email","frmSwitcher","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,iBAAlD;;AACA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAC5BC,EAAAA,cAD4B;AAE5BC,EAAAA,mBAF4B;AAG5BC,EAAAA,KAH4B;AAI5BC,EAAAA;AAJ4B,CAAD,KAKvB;AACJ,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,IAAD;AAAM,UAAA,YAAY,EAAC,KAAnB;AAAyB,UAAA,QAAQ,EAAEF,mBAAnC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,QAAQ,EAAED,cAHZ;AAIE,cAAA,KAAK,EAAEE,KAJT;AAKE,cAAA,WAAW,EAAC,6BALd;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAoBE;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAa,UAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,OAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA1CM;KAAMJ,a;AA2CbA,aAAa,CAACK,SAAd,GAA0B;AACxBJ,EAAAA,cAAc,EAAEP,SAAS,CAACY,IAAV,CAAeC,UADP;AAExBL,EAAAA,mBAAmB,EAAER,SAAS,CAACY,IAAV,CAAeC,UAFZ;AAGxBH,EAAAA,WAAW,EAAEV,SAAS,CAACY,IAAV,CAAeC,UAHJ;AAIxBJ,EAAAA,KAAK,EAAET,SAAS,CAACc,MAAV,CAAiBD;AAJA,CAA1B","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nexport const ResetPassword = ({\n  handleOnChange,\n  handleOnResetSubmit,\n  email,\n  frmSwitcher,\n}) => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-info text-center\">\n            RÃ©initialiser le mot de passe\n          </h1>\n          <hr></hr>\n          <Form autoComplete=\"off\" onSubmit={handleOnResetSubmit}>\n            <Form.Group>\n              <Form.Label>Addresse Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                onChange={handleOnChange}\n                value={email}\n                placeholder=\"Entrez votre addresse email\"\n                required\n              />\n            </Form.Group>\n\n            <Button type=\"submit\">Envoyer le code</Button>\n          </Form>\n          <hr />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <a href=\"#!\" onClick={() => frmSwitcher(\"login\")}>\n            Se Connecter ?\n          </a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nResetPassword.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  handleOnResetSubmit: PropTypes.func.isRequired,\n  frmSwitcher: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}