{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={isLoading:false,error:\"\",successMsg:\"\"};var newTicketSlice=createSlice({name:\"newTicket\",initialState:initialState,reducers:{openNewTicketPending:function openNewTicketPending(state){state.isLoading=true;},openNewTicketSuccess:function openNewTicketSuccess(state,_ref){var payload=_ref.payload;state.isLoading=false;state.successMsg=payload;},openNewTicketFail:function openNewTicketFail(state,_ref2){var payload=_ref2.payload;state.isLoading=true;state.error=payload;},restSuccessMSg:function restSuccessMSg(state){state.isLoading=true;state.successMsg=\"\";}}});var _newTicketSlice$actio=newTicketSlice.actions,openNewTicketPending=_newTicketSlice$actio.openNewTicketPending,openNewTicketSuccess=_newTicketSlice$actio.openNewTicketSuccess,openNewTicketFail=_newTicketSlice$actio.openNewTicketFail,restSuccessMSg=_newTicketSlice$actio.restSuccessMSg;export{openNewTicketPending,openNewTicketSuccess,openNewTicketFail,restSuccessMSg};export default newTicketSlice.reducer;","map":{"version":3,"sources":["/Users/drissjd/Desktop/AgileProject/agile_frontend/src/components/add-ticket-from/add-ticketSlicer.js"],"names":["createSlice","initialState","isLoading","error","successMsg","newTicketSlice","name","reducers","openNewTicketPending","state","openNewTicketSuccess","payload","openNewTicketFail","restSuccessMSg","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,KADQ,CAEnBC,KAAK,CAAE,EAFY,CAGnBC,UAAU,CAAE,EAHO,CAArB,CAKA,GAAMC,CAAAA,cAAc,CAAGL,WAAW,CAAC,CACjCM,IAAI,CAAE,WAD2B,CAEjCL,YAAY,CAAZA,YAFiC,CAGjCM,QAAQ,CAAE,CACRC,oBAAoB,CAAE,8BAACC,KAAD,CAAW,CAC/BA,KAAK,CAACP,SAAN,CAAkB,IAAlB,CACD,CAHO,CAIRQ,oBAAoB,CAAE,8BAACD,KAAD,MAAwB,IAAdE,CAAAA,OAAc,MAAdA,OAAc,CAC5CF,KAAK,CAACP,SAAN,CAAkB,KAAlB,CACAO,KAAK,CAACL,UAAN,CAAmBO,OAAnB,CACD,CAPO,CAQRC,iBAAiB,CAAE,2BAACH,KAAD,OAAwB,IAAdE,CAAAA,OAAc,OAAdA,OAAc,CACzCF,KAAK,CAACP,SAAN,CAAkB,IAAlB,CACAO,KAAK,CAACN,KAAN,CAAcQ,OAAd,CACD,CAXO,CAYRE,cAAc,CAAE,wBAACJ,KAAD,CAAW,CACzBA,KAAK,CAACP,SAAN,CAAkB,IAAlB,CACAO,KAAK,CAACL,UAAN,CAAmB,EAAnB,CACD,CAfO,CAHuB,CAAD,CAAlC,CAsBO,0BAKHC,cAAc,CAACS,OALZ,CACLN,oBADK,uBACLA,oBADK,CAELE,oBAFK,uBAELA,oBAFK,CAGLE,iBAHK,uBAGLA,iBAHK,CAILC,cAJK,uBAILA,cAJK,C,mFAMP,cAAeR,CAAAA,cAAc,CAACU,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  error: \"\",\n  successMsg: \"\",\n};\nconst newTicketSlice = createSlice({\n  name: \"newTicket\",\n  initialState,\n  reducers: {\n    openNewTicketPending: (state) => {\n      state.isLoading = true;\n    },\n    openNewTicketSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.successMsg = payload;\n    },\n    openNewTicketFail: (state, { payload }) => {\n      state.isLoading = true;\n      state.error = payload;\n    },\n    restSuccessMSg: (state) => {\n      state.isLoading = true;\n      state.successMsg = \"\";\n    },\n  },\n});\n\nexport const {\n  openNewTicketPending,\n  openNewTicketSuccess,\n  openNewTicketFail,\n  restSuccessMSg,\n} = newTicketSlice.actions;\nexport default newTicketSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}