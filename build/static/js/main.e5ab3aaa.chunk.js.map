{"version":3,"sources":["pages/dashboard/userSlice.js","api/userApi.js","pages/dashboard/userAction.js","components/login/Login.Slice.js","components/login/Login.comp.js","password-reset/PasswordReset.comp.js","pages/entry/Entry.page.js","layout/partial/Footer.comp.js","assets/img/dev.png","layout/partial/Header.comp.js","layout/DefaultLayout.js","pages/ticket-lists/ticketSlice.js","api/ticketApi.js","pages/ticket-lists/ticketsAction.js","components/Ticket-table/TicketTable.comp.js","components/breadcrumb/Breadcrumb.comp.js","pages/dashboard/Dashboard.page.js","components/add-ticket-from/add-ticketSlicer.js","components/add-ticket-from/add-ticketAction.js","components/add-ticket-from/AddTicketForm.comp.js","utils/validation.js","components/new-ticket/Addticketpage.js","components/search-form/SearchForm.comp.js","pages/ticket-lists/TicketLists.page.js","components/message-history/MessageHistory.comp.js","components/update-ticket/UpdateTicket.comp.js","pages/ticket/Ticket.page.js","components/private-route/PrivateRoute.comp.js","components/registration-form/userRegistrationSlice.js","components/registration-form/RegistrationForm.comp.js","components/registration-form/userRegAction.js","pages/registration/Registration.page.js","pages/verification/UserVerification.page.js","App.js","store.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","isLoading","error","reducers","getUserPending","state","getUserSuccess","payload","getUserFail","actions","rootUrl","userProfileUrl","userRegistration","frmData","Promise","resolve","reject","a","axios","post","res","data","status","userRegistrationVerification","patch","message","userLogin","sessionStorage","setItem","accessJWT","localStorage","JSON","stringify","refreshJWT","userLogout","delete","headers","Authorization","getItem","console","log","getUserProfile","dispatch","get","result","_id","loginSlice","isAuth","loginPending","loginSuccess","loginFail","reducer","LoginForm","frmSwitcher","useDispatch","history","useHistory","useLocation","useSelector","login","useEffect","push","useState","email","setEmail","password","setPassword","handleOnChange","e","target","value","handleOnSubmit","preventDefault","alert","Container","Row","Col","className","Alert","variant","Form","autoComplete","onSubmit","Group","Label","Control","type","onChange","placeholder","required","Button","Spinner","animation","href","onClick","ResetPassword","handleOnResetSubmit","Entry","frmLoad","setFrmLoad","frmType","Jumbotron","Footer","Header","Navbar","collapseOnSelect","bg","expand","Brand","src","logo","alt","width","style","Toggle","aria-controls","Collapse","id","Nav","to","Link","size","removeItem","DefaultLayout","children","ticketListSlice","tickets","searchTicketList","selectedTicket","replyMsg","fetchTicketLoading","action","fetchTicketSuccess","fetchTicketFail","searchTickets","filter","row","subject","toLowerCase","includes","fetchSingleTicketLoading","fetchSingleTicketSuccess","fetchSingleTicketFail","replyTicketLoading","replyTicketSuccess","replyTicketFail","replyTicketError","closeTicketLoading","closeTicketSuccess","closeTicketFail","resetResponseMsg","ticketUlr","getSingleTicket","updateReplyTicket","msgObj","put","updateTicketStatusClosed","createNewTicket","fetchAllTickets","fetchSingleTicket","length","TicketTable","color","columns","dataField","text","formatter","cell","rowIndex","extraData","colIndex","backgroundColor","classes","hover","keyField","responsive","pagination","paginationFactory","PageBreadcrumb","page","Breadcrumb","Item","active","Dashboard","str","pendingtickets","totaltickets","newTicketSlice","successMsg","openNewTicketPending","openNewTicketSuccess","openNewTicketFail","restSuccessMSg","openNewTicket","initialFrmDt","issueDate","initialFrmError","AddTicketForm","setFrmData","frmDataError","setFrmDataError","cmbvalue","setcmbValue","typevalue","settypeValue","openTicket","isSubjectValid","sender","priority","speciality","background","minLength","maxLength","Text","as","DropdownButton","alignRight","title","onSelect","Dropdown","eventKey","detail","AddTicketPage","SearchForm","column","sm","boxShadow","TicketLists","MessageHistory","msg","map","i","padding","msgAt","Date","toLocaleString","UpdateTicket","setMessage","replyOnTicket","rows","Ticket","tId","useParams","openAt","disabled","conversations","PrivateRoute","rest","updateAccessJWT","parse","render","location","pathname","from","userRegestrationSlice","registrationPending","registrationSuccess","registrationError","phone","company","address","confirmPass","passVerificationError","isLenthy","hasUpper","hasLower","hasNumber","hasSpclChr","RegistrationForm","newUser","setNewUser","passwordError","setPasswordError","registration","test","frmDt","Object","values","Registration","initialResponse","UserVerification","dt","response","setResponse","apiCall","App","exact","path","store","configureStore","ticketsReducer","loginReducer","userReducer","newTicketReducer","registrationReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5ab3aaa.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: {},\n  isLoading: false,\n  error: \"\",\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getUserPending: (state) => {\n      state.isLoading = true;\n    },\n    getUserSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.user = payload;\n      state.error = \"\";\n    },\n    getUserFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n  },\n});\n\nexport const {\n  getUserPending,\n  getUserSuccess,\n  getUserFail,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","import axios from \"axios\";\n\nconst rootUrl = \"https://devagileicrm.herokuapp.com/v1/\";\nconst loginUrl = rootUrl + \"user/login\";\nconst userProfileUrl = rootUrl + \"user\";\nconst logoutUrl = rootUrl + \"user/logout\";\nconst newAccessJWT = rootUrl + \"tokens\";\nconst userVerificationUrl = userProfileUrl + \"/verify\";\n\nexport const userRegistration = (frmData) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await axios.post(userProfileUrl, frmData);\n\n      resolve(res.data);\n\n      if (res.data.status === \"success\") {\n        resolve(res.data);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const userRegistrationVerification = (frmData) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await axios.patch(userVerificationUrl, frmData);\n\n      resolve(res.data);\n      if (res.data.status === \"success\") {\n        resolve(res.data);\n      }\n    } catch (error) {\n      reject({ status: \"error\", message: error.error });\n    }\n  });\n};\n\nexport const userLogin = (frmData) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await axios.post(loginUrl, frmData);\n\n      resolve(res.data);\n\n      if (res.data.status === \"success\") {\n        sessionStorage.setItem(\"accessJWT\", res.data.accessJWT);\n        localStorage.setItem(\n          \"crmSite\",\n          JSON.stringify({ refreshJWT: res.data.refreshJWT })\n        );\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const fetchUser = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const accessJWT = sessionStorage.getItem(\"accessJWT\");\n\n      if (!accessJWT) {\n        reject(\"Token not found!\");\n      }\n\n      const res = await axios.get(userProfileUrl, {\n        headers: {\n          Authorization: accessJWT,\n        },\n      });\n\n      resolve(res.data);\n    } catch (error) {\n      console.log(error);\n      reject(error.message);\n    }\n  });\n};\n\nexport const fetchNewAccessJWT = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { refreshJWT } = JSON.parse(localStorage.getItem(\"crmSite\"));\n\n      if (!refreshJWT) {\n        reject(\"Token not found!\");\n      }\n\n      const res = await axios.get(newAccessJWT, {\n        headers: {\n          Authorization: refreshJWT,\n        },\n      });\n\n      if (res.data.status === \"success\") {\n        sessionStorage.setItem(\"accessJWT\", res.data.accessJWT);\n      }\n\n      resolve(true);\n    } catch (error) {\n      if (error.message === \"Request failed with status code 403\") {\n        localStorage.removeItem(\"crmSite\");\n      }\n\n      reject(false);\n    }\n  });\n};\n\nexport const userLogout = async () => {\n  try {\n    await axios.delete(logoutUrl, {\n      headers: {\n        Authorization: sessionStorage.getItem(\"accessJWT\"),\n      },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { getUserPending, getUserSuccess, getUserFail } from \"./userSlice\";\nimport { fetchUser } from \"../../api/userApi\";\n\nexport const getUserProfile = () => async (dispatch) => {\n  try {\n    dispatch(getUserPending());\n\n    const result = await fetchUser();\n\n    if (result.user && result.user._id)\n      return dispatch(getUserSuccess(result.user));\n\n    dispatch(getUserFail(\"User is not found\"));\n  } catch (error) {\n    dispatch(getUserFail(error));\n  }\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\",\n};\n\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    loginPending: (state) => {\n      state.isLoading = true;\n    },\n    loginSuccess: (state) => {\n      state.isLoading = false;\n      state.isAuth = true;\n      state.error = \"\";\n    },\n    loginFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n  },\n});\n\nconst { reducer, actions } = loginSlice;\n\nexport const { loginPending, loginSuccess, loginFail } = actions;\n\nexport default reducer;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport { loginPending, loginSuccess, loginFail } from \"./Login.Slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userLogin } from \"../../api/userApi\";\nexport const LoginForm = ({ frmSwitcher }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let location = useLocation();\n  const { isLoading, error } = useSelector((state) => state.login);\n  useEffect(() => {\n    sessionStorage.getItem(\"accessJWT\") && history.push(\"/dashboard\");\n  }, [history]);\n  const [email, setEmail] = useState(\"fakeemail@email.com\");\n  const [password, setPassword] = useState(\"sfsd#3Dsga\");\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n    console.log(name, value);\n  };\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      alert(\"Veuillez remplir les champs\");\n    }\n    dispatch(loginPending());\n    try {\n      const isAuth = await userLogin({ email, password });\n\n      if (isAuth.status === \"error\") {\n        return dispatch(loginFail(isAuth.message));\n      }\n\n      dispatch(loginSuccess());\n      dispatch(getUserProfile());\n      history.push(\"/dashboard\");\n    } catch (error) {\n      dispatch(loginFail(error.message));\n    }\n  };\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-info text-center\">Se Connecter</h1>\n          <hr></hr>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form autoComplete=\"off\" onSubmit={handleOnSubmit}>\n            <Form.Group>\n              <Form.Label>Addresse Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                onChange={handleOnChange}\n                value={email}\n                placeholder=\"Entrez votre addresse email\"\n                required\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Mot de passe</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                onChange={handleOnChange}\n                value={password}\n                placeholder=\"Mot de passe\"\n                required\n              />\n            </Form.Group>\n            <Button type=\"submit\">Se connecter</Button>\n            {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n          </Form>\n          <hr />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <a href=\"#!\" onClick={() => frmSwitcher(\"reset\")}>\n            Mot de passe oublié ?\n          </a>\n        </Col>\n      </Row>\n      <Row className=\"py-4\">\n        <Col>\n          <a href=\"/registration\">Créer un compte</a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nLoginForm.propTypes = {\n  frmSwitcher: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nexport const ResetPassword = ({\n  handleOnChange,\n  handleOnResetSubmit,\n  email,\n  frmSwitcher,\n}) => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-info text-center\">\n            Réinitialiser le mot de passe\n          </h1>\n          <hr></hr>\n          <Form autoComplete=\"off\" onSubmit={handleOnResetSubmit}>\n            <Form.Group>\n              <Form.Label>Addresse Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                onChange={handleOnChange}\n                value={email}\n                placeholder=\"Entrez votre addresse email\"\n                required\n              />\n            </Form.Group>\n\n            <Button type=\"submit\">Envoyer le code</Button>\n          </Form>\n          <hr />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <a href=\"#!\" onClick={() => frmSwitcher(\"login\")}>\n            Se Connecter ?\n          </a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nResetPassword.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  handleOnResetSubmit: PropTypes.func.isRequired,\n  frmSwitcher: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport \"./Entry.style.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport { LoginForm } from \"../../components/login/Login.comp\";\nimport { ResetPassword } from \"../../password-reset/PasswordReset.comp\";\nconst Entry = () => {\n  const [frmLoad, setFrmLoad] = useState(\"login\");\n  const handleOnResetSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const frmSwitcher = (frmType) => {\n    setFrmLoad(frmType);\n  };\n  return (\n    <div className=\"entry-page bg-info\">\n      <Jumbotron className=\"form-box\">\n        {frmLoad === \"login\" && <LoginForm frmSwitcher={frmSwitcher} />}\n        {frmLoad === \"reset\" && (\n          <ResetPassword\n            //handleOnChange={handleOnChange}\n            handleOnResetSubmit={handleOnResetSubmit}\n            frmSwitcher={frmSwitcher}\n            //email={email}\n          />\n        )}\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Entry;\n","import React from \"react\";\n\nexport const Footer = () => {\n  return (\n    <div className=\"text-center copy-right\">\n      &copy; iCRM all right reserved -2021\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/dev.ed29adee.png\";","import React from \"react\";\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\nimport logo from \"../../assets/img/dev.png\";\nimport \"./FooterButtons.css\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport { useHistory } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { userLogout } from \"../../api/userApi\";\nexport const Header = () => {\n  const history = useHistory();\n  const logMeOut = () => {\n    sessionStorage.removeItem(\"accessJWT\");\n    localStorage.removeItem(\"crmSite\");\n    userLogout();\n    history.push(\"/\");\n  };\n  const { user } = useSelector((state) => state.user);\n  return (\n    <Navbar collapseOnSelect bg=\"\" variant=\"dark\" expand=\"md\">\n      <Navbar.Brand>\n        <img src={logo} alt=\"logo\" width=\"65px\" />\n      </Navbar.Brand>\n      <h3\n        style={{\n          \"text-shadow\":\n            \"0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px orangered, 0 0 80px orangered, 0 0 90px orangered, 0 0 100px orangered, 0 0 150px orangered\",\n        }}\n      >\n        Bienvenue {user.name}\n      </h3>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <LinkContainer to=\"/dashboard\">\n            <Nav.Link>\n              <Button variant=\"outline-light\" size=\"lg\" className=\"HeaderBTN\">\n                L'interface\n              </Button>\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/tickets\">\n            <Nav.Link>\n              <Button variant=\"outline-light\" size=\"lg\" className=\"HeaderBTN\">\n                Les tickets\n              </Button>\n            </Nav.Link>\n          </LinkContainer>\n          <Nav.Link onClick={logMeOut}>\n            <Button variant=\"outline-light\" size=\"lg\" className=\"HeaderBTN\">\n              Se Deconnecter\n            </Button>\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n","import React from \"react\";\nimport { Footer } from \"./partial/Footer.comp\";\nimport { Header } from \"./partial/Header.comp\";\n\nexport const DefaultLayout = ({ children }) => {\n  return (\n    <div className=\"default-layout\">\n      <div className=\"header\">\n        <Header />\n      </div>\n\n      <main className=\"main\">{children}</main>\n      <footer className=\"footer\">\n        <Footer />\n      </footer>\n    </div>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  tickets: [],\n  isLoading: false,\n  error: \"\",\n  searchTicketList: [],\n  selectedTicket: {},\n  replyMsg: \"\",\n};\n\nconst ticketListSlice = createSlice({\n  name: \"ticketList\",\n  initialState,\n  reducers: {\n    fetchTicketLoading: (state, action) => {\n      state.isLoading = true;\n    },\n    fetchTicketSuccess: (state, action) => {\n      state.tickets = action.payload;\n      state.searchTicketList = action.payload;\n      state.isLoading = false;\n    },\n    fetchTicketFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n    searchTickets: (state, { payload }) => {\n      state.searchTicketList = state.tickets.filter((row) => {\n        if (!payload) return row;\n        return row.subject.toLowerCase().includes(payload.toLowerCase());\n      });\n    },\n    fetchSingleTicketLoading: (state) => {\n      state.isLoading = true;\n    },\n    fetchSingleTicketSuccess: (state, { payload }) => {\n      state.selectedTicket = payload;\n      state.isLoading = false;\n      state.error = \"\";\n    },\n    fetchSingleTicketFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n    replyTicketLoading: (state) => {\n      state.isLoading = true;\n    },\n    replyTicketSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.replyMsg = payload;\n    },\n    replyTicketFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.replyTicketError = payload;\n    },\n    closeTicketLoading: (state) => {\n      state.isLoading = true;\n    },\n    closeTicketSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.replyMsg = payload;\n    },\n    closeTicketFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n    resetResponseMsg: (state) => {\n      state.isLoading = false;\n      state.replyTicketError = \"\";\n      state.replyMsg = \"\";\n    },\n  },\n});\n\nconst { reducer, actions } = ticketListSlice;\n\nexport const {\n  fetchTicketLoading,\n  fetchTicketSuccess,\n  fetchTicketFail,\n  searchTickets,\n  fetchSingleTicketLoading,\n  fetchSingleTicketSuccess,\n  fetchSingleTicketFail,\n  replyTicketLoading,\n  replyTicketSuccess,\n  replyTicketFail,\n  closeTicketLoading,\n  closeTicketSuccess,\n  closeTicketFail,\n  resetResponseMsg,\n} = actions;\n\nexport default reducer;\n","import axios from \"axios\";\n\nconst rootUrl = \"https://devagileicrm.herokuapp.com/v1/\";\nconst ticketUlr = rootUrl + \"ticket/\";\nconst closeTicketUrl = rootUrl + \"ticket/close-ticket/\";\n\nexport const getAllTickets = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(\n        \"https://devagileicrm.herokuapp.com/v1/ticket\",\n        {\n          headers: {\n            Authorization: sessionStorage.getItem(\"accessJWT\"),\n          },\n        }\n      );\n\n      resolve(result);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getSingleTicket = (_id) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(ticketUlr + _id, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n\n      resolve(result);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\n\nexport const updateReplyTicket = (_id, msgObj) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.put(ticketUlr + _id, msgObj, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\n\nexport const updateTicketStatusClosed = (_id) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.patch(\n        closeTicketUrl + _id,\n        {},\n        {\n          headers: {\n            Authorization: sessionStorage.getItem(\"accessJWT\"),\n          },\n        }\n      );\n\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\n\nexport const createNewTicket = (frmData) => {\n  console.log(\"FROM THE API\", frmData);\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.post(ticketUlr, frmData, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\n","import axios from \"axios\";\n\nimport {\n  fetchTicketLoading,\n  fetchTicketSuccess,\n  fetchTicketFail,\n  searchTickets,\n  fetchSingleTicketLoading,\n  fetchSingleTicketSuccess,\n  fetchSingleTicketFail,\n  replyTicketLoading,\n  replyTicketSuccess,\n  replyTicketFail,\n  closeTicketLoading,\n  closeTicketSuccess,\n  closeTicketFail,\n} from \"./ticketSlice\";\n\nimport {\n  getAllTickets,\n  getSingleTicket,\n  updateReplyTicket,\n  updateTicketStatusClosed,\n} from \"../../api/ticketApi\";\nexport const fetchAllTickets = () => async (dispatch) => {\n  dispatch(fetchTicketLoading());\n\n  try {\n    const result = await getAllTickets();\n    dispatch(fetchTicketSuccess(result.data.result));\n    if (!result.data.result) {\n      dispatch(fetchTicketFail({ message: \"error couldn't load\" }));\n    }\n    //console.log(result);\n  } catch (error) {\n    dispatch(fetchTicketFail(error.message));\n  }\n};\n\nexport const filterSearchTicket = (str) => (dispatch) => {\n  dispatch(searchTickets(str));\n};\n\nexport const fetchSingleTicket = (_id) => async (dispatch) => {\n  dispatch(fetchSingleTicketLoading());\n  try {\n    const result = await getSingleTicket(_id);\n    dispatch(\n      fetchSingleTicketSuccess(\n        result.data.result.length && result.data.result[0]\n      )\n    );\n  } catch (error) {\n    dispatch(fetchSingleTicketFail(error.message));\n  }\n};\n\nexport const replyOnTicket = (_id, msgObj) => async (dispatch) => {\n  dispatch(replyTicketLoading());\n  try {\n    const result = await updateReplyTicket(_id, msgObj);\n    console.log(result);\n    if (result.status === \"error\") {\n      return dispatch(replyTicketFail(result.message));\n    }\n\n    dispatch(fetchSingleTicket(_id));\n\n    dispatch(replyTicketSuccess(\"Message envoyée avec succes\"));\n  } catch (error) {\n    console.log(error.message);\n    dispatch(replyTicketFail(error.message));\n  }\n};\n\nexport const closeTicket = (_id) => async (dispatch) => {\n  dispatch(closeTicketLoading());\n  try {\n    const result = await updateTicketStatusClosed(_id);\n    if (result.status === \"error\") {\n      return dispatch(closeTicketFail(result.message));\n    }\n\n    dispatch(fetchSingleTicket(_id));\n\n    dispatch(closeTicketSuccess(\"Ce ticket est fermé\"));\n  } catch (error) {\n    console.log(error.message);\n    dispatch(closeTicketFail(error.message));\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { BoxLoading, WindMillLoading } from \"react-loadingg\";\nimport { Table, Container, Col } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { fetchAllTickets } from \"../../pages/ticket-lists/ticketsAction\";\nimport { useDispatch } from \"react-redux\";\n\nexport const TicketTable = () => {\n  const dispatch = useDispatch();\n  const { searchTicketList, isLoading, error } = useSelector(\n    (state) => state.tickets\n  );\n  useEffect(() => {\n    dispatch(fetchAllTickets());\n  }, [dispatch]);\n  const data = searchTicketList;\n  if (isLoading)\n    return (\n      <div>\n        <WindMillLoading />\n        <h3\n          style={{\n            \"text-align\": \"center\",\n            \"margin-top\": \"150px\",\n            color: \"cyan\",\n          }}\n        >\n          Loading...\n        </h3>\n      </div>\n    );\n\n  if (error) return <h3>{error}</h3>;\n\n  const columns = [\n    {\n      dataField: \"_id\",\n      text: \"Identifiant du ticket\",\n    },\n    {\n      dataField: \"subject\",\n      text: \"Sujet\",\n      formatter: (cell, row, rowIndex, extraData) => (\n        <Link to={`/ticket/${row._id}`}>{row.subject}</Link>\n      ),\n    },\n    { dataField: \"status\", text: \"Status\" },\n    {\n      dataField: \"priority\",\n      text: \"Priorité\",\n      style: (cell, row, rowIndex, colIndex) => {\n        if (cell === \"Elevée\") {\n          return {\n            backgroundColor: \"red\",\n          };\n        } else if (cell === \"Moyenne\") {\n          return {\n            backgroundColor: \"orange\",\n          };\n        }\n        return {\n          backgroundColor: \"green\",\n        };\n      },\n    },\n    { dataField: \"openAt\", text: \"Date d'ouverture\" },\n  ];\n  return (\n    <Container>\n      {/*<Table className=\"table table-striped table-dark\" hover>\n        <thead>\n          <tr>\n            <th>Identifiant du ticket</th>\n            <th>Sujet</th>\n            <th>Status</th>\n            <th>Priorité</th>\n            <th>Date d'ouverture</th>\n          </tr>\n        </thead>\n        <tbody>\n          {searchTicketList.length ? (\n            searchTicketList.map((row) => (\n              <tr>\n                <td>{row._id}</td>\n                <td>\n                  <Link to={`/ticket/${row._id}`}>{row.subject}</Link>\n                </td>\n                <td>{row.status}</td>\n                <td\n                  style={{\n                    backgroundColor:\n                      row.priority == \"Elevée\"\n                        ? \"red\"\n                        : row.priority == \"Moyenne\"\n                        ? \"orange\"\n                        : \"green\",\n                  }}\n                >\n                  {row.priority}\n                </td>\n                <td>{row.openAt && new Date(row.openAt).toLocaleString()}</td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"5\" className=\"text-center\">\n                Vous n'avez auncun ticket de reclamation en cours{\"\"}\n              </td>\n            </tr>\n          )}\n        </tbody>\n          </Table> */}\n      <BootstrapTable\n        classes=\"table table-striped table-dark\"\n        hover\n        keyField=\"id\"\n        data={data}\n        columns={columns}\n        responsive\n        pagination={paginationFactory()}\n      />\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nexport const PageBreadcrumb = ({ page }) => {\n  return (\n    <Breadcrumb>\n      <LinkContainer to=\"/dashboard\">\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\n      </LinkContainer>\n\n      <Breadcrumb.Item active>{page}</Breadcrumb.Item>\n    </Breadcrumb>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Button, Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllTickets } from \"../../pages/ticket-lists/ticketsAction\";\nimport { TicketTable } from \"../../components/Ticket-table/TicketTable.comp\";\n//import tickets from \"../../assets/data/dummy-tickets.json\";\nimport \"./DashboardStyling.css\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { Link } from \"react-router-dom\";\nexport const Dashboard = () => {\n  const dispatch = useDispatch();\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const [str, setStr] = useState(\"\");\n  useEffect(() => {\n    dispatch(fetchAllTickets());\n  }, [str, dispatch]);\n  const { tickets } = useSelector((state) => state.tickets);\n  const pendingtickets = tickets.filter((row) => row.status !== \"Fermer\");\n  const totaltickets = tickets.length;\n  return (\n    <Container>\n      <hr />\n\n      <Row>\n        <Col>\n          <PageBreadcrumb page=\"Dashboard\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"text-center mt-5 mb-2\">\n          <Link to=\"/add-ticket\">\n            <Button\n              className=\"HeaderBTN\"\n              variant=\"success\"\n              style={{\n                \"font-size\": \"2rem\",\n                \"border-radius\": \"2rem\",\n              }}\n            >\n              Ajouter un Ticket\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"text-center mb-2\">\n          <div>\n            <h2>Total des tickets: {totaltickets}</h2>\n          </div>\n          <div>\n            <h2>Mes tickets en attente: {pendingtickets.length}</h2>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col\n          className=\"text-center mb-2\"\n          style={{\n            \"font-size\": \"1.5rem\",\n          }}\n        >\n          Ticket Ajouté recently\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col className=\"recent-ticket\">\n          <TicketTable />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  error: \"\",\n  successMsg: \"\",\n};\nconst newTicketSlice = createSlice({\n  name: \"newTicket\",\n  initialState,\n  reducers: {\n    openNewTicketPending: (state) => {\n      state.isLoading = true;\n    },\n    openNewTicketSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.successMsg = payload;\n    },\n    openNewTicketFail: (state, { payload }) => {\n      state.isLoading = true;\n      state.error = payload;\n    },\n    restSuccessMSg: (state) => {\n      state.isLoading = true;\n      state.successMsg = \"\";\n    },\n  },\n});\n\nexport const {\n  openNewTicketPending,\n  openNewTicketSuccess,\n  openNewTicketFail,\n  restSuccessMSg,\n} = newTicketSlice.actions;\nexport default newTicketSlice.reducer;\n","import {\n  openNewTicketPending,\n  openNewTicketSuccess,\n  openNewTicketFail,\n} from \"./add-ticketSlicer\";\nimport { createNewTicket } from \"../../api/ticketApi\";\n\nexport const openNewTicket = (frmData) => (dispatch) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      dispatch(openNewTicketPending());\n\n      const result = await createNewTicket(frmData);\n      if (result.status === \"error\") {\n        return dispatch(openNewTicketFail(result.message));\n      }\n      dispatch(openNewTicketSuccess(\"Ticket Envoyé avec success\"));\n    } catch (error) {\n      console.log(error);\n      dispatch(openNewTicketFail(error.message));\n    }\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Form,\n  Button,\n  Row,\n  Col,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport PropTypes from \"prop-types\";\nimport { shortText } from \"../../utils/validation\";\nimport \"./add-ticket-form.style.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openNewTicket } from \"./add-ticketAction\";\nimport { restSuccessMSg } from \"./add-ticketSlicer\";\nconst initialFrmDt = {\n  subject: \"\",\n  issueDate: \"\",\n  message: \"\",\n};\nconst initialFrmError = {\n  subject: false,\n  issueDate: false,\n  message: false,\n};\n\nexport const AddTicketForm = () => {\n  const [frmData, setFrmData] = useState(initialFrmDt);\n  const [frmDataError, setFrmDataError] = useState(initialFrmError);\n  const [cmbvalue, setcmbValue] = useState(\"Selectioner\");\n  const [typevalue, settypeValue] = useState(\"Selectioner\");\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    successMsg && dispatch(restSuccessMSg());\n  }, [dispatch, frmData, frmDataError]);\n\n  const { isLoading, error, successMsg } = useSelector(\n    (state) => state.openTicket\n  );\n  const {\n    user: { name },\n  } = useSelector((state) => state.user);\n\n  const handleSelect = (e) => {\n    console.log(e);\n    setcmbValue(e);\n  };\n  const handleSelect2 = (e) => {\n    console.log(e);\n    settypeValue(e);\n  };\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setFrmData({\n      ...frmData,\n      [name]: value,\n    });\n    console.log(name, value);\n  };\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    setFrmDataError(initialFrmError);\n    const isSubjectValid = await shortText(frmData.subject);\n\n    setFrmDataError({\n      ...initialFrmError,\n      subject: !isSubjectValid,\n    });\n    dispatch(\n      openNewTicket({\n        ...frmData,\n        sender: name,\n        priority: cmbvalue,\n        speciality: typevalue,\n      })\n    );\n    //console.log(\"Form submit request received\", frmData);\n  };\n\n  return (\n    <Jumbotron style={{ background: \"none\" }} className=\"mt-3 add-new-ticket\">\n      <h1 className=\"text-center\">Ajouter un Nouveau Ticket</h1>\n      <hr style={{ backgroundColor: \"orangered\" }} />\n      <div>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {successMsg && <Alert variant=\"primary\">{successMsg}</Alert>}\n        {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n      </div>\n      <Form autoComplete=\"off\" onSubmit={handleOnSubmit}>\n        <Form.Group>\n          <Form.Label>Sujet</Form.Label>\n          <Form.Control\n            name=\"subject\"\n            value={frmData.subject}\n            onChange={handleOnChange}\n            minLength=\"3\"\n            maxLength=\"50\"\n            placeholder=\"Entrez le sujet de votre reclamation\"\n            required\n          />\n          <Form.Text className=\"text-danger\">\n            {/*frmDataError.subject && \"Subject is required !\"*/}\n          </Form.Text>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Date de l'incident</Form.Label>\n          <Form.Control\n            type=\"date\"\n            name=\"issueDate\"\n            placeholder=\"jj-mm-aaaa\"\n            value={frmData.issueDate}\n            onChange={handleOnChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Les details</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            name=\"message\"\n            value={frmData.message}\n            onChange={handleOnChange}\n            placeholder=\"Decrivez votre Problème \"\n            required\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Priorité</Form.Label>\n          <DropdownButton\n            alignRight\n            title={cmbvalue}\n            value={cmbvalue}\n            id=\"dropdown-menu-align-right\"\n            onSelect={handleSelect}\n            required\n          >\n            <Dropdown.Item style={{ backgroundColor: \"red\" }} eventKey=\"Elevée\">\n              Elevée\n            </Dropdown.Item>\n            <Dropdown.Item\n              style={{ backgroundColor: \"orange\" }}\n              eventKey=\"Moyenne\"\n            >\n              Moyenne\n            </Dropdown.Item>\n            <Dropdown.Item\n              style={{ backgroundColor: \"green\" }}\n              eventKey=\"Basse\"\n            >\n              Basse\n            </Dropdown.Item>\n          </DropdownButton>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Type:</Form.Label>\n          <DropdownButton\n            alignRight\n            title={typevalue}\n            value={typevalue}\n            id=\"dropdown-menu-align-right\"\n            onSelect={handleSelect2}\n            required\n          >\n            <Dropdown.Item eventKey=\"Pedagogique\">Pedagogique</Dropdown.Item>\n            <Dropdown.Item eventKey=\"Technique\">Technique</Dropdown.Item>\n            <Dropdown.Item eventKey=\"Réseau\">Réseau</Dropdown.Item>\n          </DropdownButton>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"info\">\n          Envoyer\n        </Button>\n      </Form>\n    </Jumbotron>\n  );\n};\n// AddTicketForm.propTypes = {\n//   handleOnSubmit: PropTypes.func.isRequired,\n//   handleOnChange: PropTypes.func.isRequired,\n//   frmDt: PropTypes.object.isRequired,\n//   frmDataErro: PropTypes.object.isRequired,\n// };\n","export const shortText = (str) => {\n  return str >= 3 && str <= 100;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../breadcrumb/Breadcrumb.comp\";\nimport { AddTicketForm } from \"../add-ticket-from/AddTicketForm.comp\";\n//import { shortText } from \"../../utils/validation\";\n//import { shortText } from \"../../utils/validation\";\n\nconst initialFrmDt = {\n  subject: \"\",\n  issueDate: \"\",\n  detail: \"\",\n};\n\nexport const AddTicketPage = () => {\n  const [frmData, setFrmData] = useState(initialFrmDt);\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setFrmData({\n      ...frmData,\n      [name]: value,\n    });\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n\n    //const isSubjectValid = await shortText(frmData.subject);\n\n    console.log(\"Form submit request received\", frmData);\n  };\n\n  return (\n    <Container>\n      <hr />\n      <Row>\n        <Col>\n          <PageBreadcrumb page=\"New Ticket\" />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <AddTicketForm />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { filterSearchTicket } from \"../../pages/ticket-lists/ticketsAction\";\nimport PropTypes from \"prop-types\";\nexport const SearchForm = () => {\n  const dispatch = useDispatch();\n  const handleOnChange = (e) => {\n    const { value } = e.target;\n    dispatch(filterSearchTicket(value));\n    console.log(value);\n  };\n  //console.log(str);\n  return (\n    <div>\n      <Form>\n        <Form.Group as={Row}>\n          <Form.Label\n            column\n            sm=\"3\"\n            style={{ color: \"white\", boxShadow: \"0px 3px 9px black\" }}\n          >\n            Rechercher:\n          </Form.Label>\n          <Col sm=\"9\">\n            <Form.Control\n              name=\"searchStr\"\n              onChange={handleOnChange}\n              placeholder=\"Rechercher ...\"\n            ></Form.Control>\n          </Col>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAllTickets } from \"./ticketsAction\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { SearchForm } from \"../../components/search-form/SearchForm.comp\";\nimport { TicketTable } from \"../../components/Ticket-table/TicketTable.comp\";\nimport tickets from \"../../assets/data/dummy-tickets.json\";\nimport { Link } from \"react-router-dom\";\nexport const TicketLists = () => {\n  const dispatch = useDispatch();\n  const [str, setStr] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(fetchAllTickets());\n  }, [str, dispatch]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <hr />\n          <PageBreadcrumb page=\"Ticket Lists\" />\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col>\n          <Link to=\"/add-ticket\">\n            <Button variant=\"info\">Ajouter un nouveau Ticket</Button>\n          </Link>\n        </Col>\n        <Col className=\"text-right\">\n          <SearchForm />\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <TicketTable />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\n\nimport \"./MessageHistory.style.css\";\nexport const MessageHistory = ({ msg }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUserProfile());\n  }, [dispatch]);\n\n  const { user } = useSelector((state) => state.user);\n  console.log(msg);\n  if (!msg) return null;\n  return msg.map((row, i) => (\n    <div\n      key={i}\n      style={{\n        \"flex-direction\": row.sender == user.name ? \"row\" : \"row-reverse\",\n        color: row.sender == user.name ? \"black\" : \"blue\",\n      }}\n      className=\"message-history mt-3\"\n    >\n      <div\n        className=\"send font-weight-bold text-secondary\"\n        style={{\n          \"box-shadow\": \" 0px 0px 30px orangered\",\n          \"border-radius\": \"1rem\",\n          padding: \"1rem\",\n          \"flex-direction\": row.sender == user.name ? \"row\" : \"row-reverse\",\n        }}\n      >\n        <div className=\"sender\">{row.sender}</div>\n        <div className=\"date\">\n          {row.msgAt && new Date(row.msgAt).toLocaleString()}\n        </div>\n      </div>\n      <div className=\"message\"> {row.message}</div>\n    </div>\n  ));\n};\n\nMessageHistory.propTypes = {\n  msg: PropTypes.array.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { replyOnTicket } from \"../../pages/ticket-lists/ticketsAction\";\nexport const UpdateTicket = ({ _id }) => {\n  const dispatch = useDispatch();\n  const {\n    user: { name },\n  } = useSelector((state) => state.user);\n  const [message, setMessage] = useState(\"\");\n\n  const handleOnChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    const msgObj = {\n      message,\n      sender: name,\n    };\n    console.log(msgObj);\n    dispatch(replyOnTicket(_id, msgObj));\n    setMessage(\"\");\n  };\n  return (\n    <Form onSubmit={handleOnSubmit}>\n      <Form.Label>Reply</Form.Label>\n      <Form.Text>\n        <h4>Veuillez repondre à notre support ici</h4>\n      </Form.Text>\n      <Form.Control\n        value={message}\n        onChange={handleOnChange}\n        as=\"textarea\"\n        rows={3}\n        name=\"detail\"\n      />\n      <div className=\"text-right mt-4\">\n        <Button variant=\"info\" type=\"submit\">\n          Repondre\n        </Button>\n      </div>\n    </Form>\n  );\n};\nUpdateTicket.propTypes = {\n  _id: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport tickets from \"../../assets/data/dummy-tickets.json\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchSingleTicket, closeTicket } from \"../ticket-lists/ticketsAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Header } from \"../../layout/partial/Header.comp\";\nimport { resetResponseMsg } from \"../ticket-lists/ticketSlice\";\n//const ticket = tickets[0];\nexport const Ticket = () => {\n  const { tId } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [ticket, setTicket] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    selectedTicket,\n    replyMsg,\n    replyTicketError,\n  } = useSelector((state) => state.tickets);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    {\n      /* for (let i = 0; i < tickets.length; i++) {\n      if (tickets[i].id == tId) {\n        setTicket(tickets[i]);\n        continue; //break the loop\n      }\n    } */\n    }\n    dispatch(fetchSingleTicket(tId));\n\n    return () => {\n      (replyMsg || replyTicketError) && dispatch(resetResponseMsg());\n    };\n  }, [message, tId, dispatch, replyMsg, replyTicketError]);\n  const handleOnChange = (e) => {\n    setMessage(e.target.value);\n  };\n  const handleOnSubmit = () => {\n    alert(\"submiitted\");\n  };\n  return (\n    <>\n      {\" \"}\n      <Header />\n      <Container>\n        <hr />\n        <Row>\n          <Col>\n            <PageBreadcrumb page=\"Ticket\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {replyTicketError && (\n              <Alert variant=\"danger\">{replyTicketError}</Alert>\n            )}\n            {replyMsg && <Alert variant=\"success\">{replyMsg}</Alert>}\n          </Col>\n        </Row>\n        <Row>\n          {tId}\n          <Col>\n            <div className=\"subject\">Sujet: {selectedTicket.subject}</div>\n            <div className=\"date\">\n              Date de reclammation:{\" \"}\n              {selectedTicket.openAt &&\n                new Date(selectedTicket.openAt).toLocaleString()}\n            </div>\n            <div className=\"status\">Status: {selectedTicket.status}</div>\n            <div className=\"priority\">Priorite {selectedTicket.priority}</div>\n          </Col>\n          <Col className=\"text-right\">\n            <Button\n              variant=\"outline-info\"\n              onClick={() => dispatch(closeTicket(tId))}\n              disabled={selectedTicket.status === \"Fermer\"}\n            >\n              Fermer le ticket\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            {selectedTicket.conversations && (\n              <MessageHistory msg={selectedTicket.conversations} />\n            )}\n          </Col>\n        </Row>\n        <hr style={{ backgroundColor: \"orange\" }} />\n        <Row className=\"mt-4\">\n          <Col>\n            <UpdateTicket _id={tId} />\n          </Col>\n        </Row>\n      </Container>{\" \"}\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { loginSuccess } from \"../login/Login.Slice\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\n\nimport { fetchNewAccessJWT } from \"../../api/userApi\";\n\nimport { DefaultLayout } from \"../../layout/DefaultLayout\";\n\nexport const PrivateRoute = ({ children, ...rest }) => {\n  const dispatch = useDispatch();\n  const { isAuth } = useSelector((state) => state.login);\n  const { user } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const updateAccessJWT = async () => {\n      const result = await fetchNewAccessJWT();\n      result && dispatch(loginSuccess());\n    };\n\n    !user._id && dispatch(getUserProfile());\n\n    !sessionStorage.getItem(\"accessJWT\") &&\n      localStorage.getItem(\"crmSite\") &&\n      updateAccessJWT();\n\n    !isAuth && sessionStorage.getItem(\"accessJWT\") && dispatch(loginSuccess());\n  }, [dispatch, isAuth, user._id]);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuth ? (\n          <DefaultLayout>{children}</DefaultLayout>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  status: \"\",\n  message: \"\",\n};\n\nconst userRegestrationSlice = createSlice({\n  name: \"userRegistration\",\n  initialState,\n  reducers: {\n    registrationPending: (state) => {\n      state.isLoading = true;\n    },\n    registrationSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.status = \"success\";\n      state.message = payload;\n    },\n    registrationError: (state, { payload }) => {\n      state.isLoading = false;\n      state.status = \"error\";\n      state.message = payload;\n    },\n  },\n});\n\nconst { reducer, actions } = userRegestrationSlice;\n\nexport const {\n  registrationPending,\n  registrationSuccess,\n  registrationError,\n} = actions;\n\nexport default reducer;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport { newUserRegistration } from \"./userRegAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst initialState = {\n  name: \"Driss Jaidi\",\n  phone: \"0611111111\",\n  email: \"fakeemail@email.com\",\n  company: \"Mac Code\",\n  address: \"Texas\",\n  password: \"sfsd#3Dsg\",\n  confirmPass: \"sfsd#3Dsg\",\n};\nconst passVerificationError = {\n  isLenthy: false,\n  hasUpper: false,\n  hasLower: false,\n  hasNumber: false,\n  hasSpclChr: false,\n  confirmPass: false,\n};\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const [newUser, setNewUser] = useState(initialState);\n  const [passwordError, setPasswordError] = useState(passVerificationError);\n\n  const { isLoading, status, message } = useSelector(\n    (state) => state.registration\n  );\n\n  useEffect(() => {}, [newUser]);\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setNewUser({ ...newUser, [name]: value });\n\n    if (name === \"password\") {\n      const isLenthy = value.length > 8;\n      const hasUpper = /[A-Z]/.test(value);\n      const hasLower = /[a-z]/.test(value);\n      const hasNumber = /[0-9]/.test(value);\n      const hasSpclChr = /[@,#,$,%,&]/.test(value);\n\n      setPasswordError({\n        ...passwordError,\n        isLenthy,\n        hasUpper,\n        hasLower,\n        hasNumber,\n        hasSpclChr,\n      });\n    }\n\n    if (name === \"confirmPass\") {\n      setPasswordError({\n        ...passwordError,\n        confirmPass: newUser.password === value,\n      });\n    }\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    // console.log(newUser);\n    const { name, phone, email, company, address, password } = newUser;\n\n    const newRegistration = {\n      name,\n      phone,\n      email,\n      company,\n      address,\n      password,\n    };\n    dispatch(newUserRegistration(newRegistration));\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-info\">Creér un compte</h1>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          {message && (\n            <Alert variant={status === \"success\" ? \"success\" : \"danger\"}>\n              {message}\n            </Alert>\n          )}\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Form onSubmit={handleOnSubmit}>\n            <Form.Group>\n              <Form.Label>Nom complet</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={newUser.name}\n                onChange={handleOnChange}\n                placeholder=\"Your name\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Telephone</Form.Label>\n              <Form.Control\n                type=\"number\"\n                name=\"phone\"\n                value={newUser.phone}\n                onChange={handleOnChange}\n                placeholder=\"Phone\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                value={newUser.email}\n                onChange={handleOnChange}\n                placeholder=\"Enter email\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Nom de l'entreprise</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"company\"\n                value={newUser.company}\n                onChange={handleOnChange}\n                placeholder=\"Company name\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Addresse</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"address\"\n                value={newUser.address}\n                onChange={handleOnChange}\n                placeholder=\"Full address\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Mot de passe</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={newUser.password}\n                onChange={handleOnChange}\n                placeholder=\"Password\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Confirmer le mot de passe</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"confirmPass\"\n                value={newUser.confirmPass}\n                onChange={handleOnChange}\n                placeholder=\"Confirm Password\"\n                required\n              />\n            </Form.Group>\n            <Form.Text>\n              {!passwordError.confirmPass && (\n                <div className=\"text-danger mb-3\">MDP non synchronisé!</div>\n              )}\n            </Form.Text>\n\n            <ul className=\"mb-4\">\n              <li\n                className={\n                  passwordError.isLenthy ? \"text-success\" : \"text-danger\"\n                }\n              >\n                Min 8 characters\n              </li>\n              <li\n                className={\n                  passwordError.hasUpper ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one upper case\n              </li>\n              <li\n                className={\n                  passwordError.hasLower ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one lower case\n              </li>\n              <li\n                className={\n                  passwordError.hasNumber ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one number\n              </li>\n              <li\n                className={\n                  passwordError.hasSpclChr ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least on of the special characters i.e @ # $ % &{\" \"}\n              </li>\n            </ul>\n\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={Object.values(passwordError).includes(false)}\n            >\n              Submit\n            </Button>\n            {isLoading && <Spinner variant=\"info\" animation=\"border\" />}\n          </Form>\n        </Col>\n      </Row>\n      <Row className=\"py-4\">\n        <Col>\n          Already have an account <a href=\"/\">Login Now</a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RegistrationForm;\n","import {\n  registrationPending,\n  registrationSuccess,\n  registrationError,\n} from \"./userRegistrationSlice\";\n\nimport { userRegistration } from \"../../api/userApi\";\n\nexport const newUserRegistration = (frmDt) => async (dispatch) => {\n  try {\n    dispatch(registrationPending());\n\n    const result = await userRegistration(frmDt);\n    result.status === \"success\"\n      ? dispatch(registrationSuccess(result.message))\n      : dispatch(registrationError(result.message));\n\n    console.log(result);\n  } catch (error) {\n    dispatch(registrationError(error.message));\n  }\n};\n","import React from \"react\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nimport RegistrationForm from \"../../components/registration-form/RegistrationForm.comp\";\n\nimport \"./registration.style.css\";\n\nexport const Registration = () => {\n  return (\n    <div className=\"registration-page \">\n      <div className=\"mt-5\">\n        <Jumbotron className=\"form-box\">\n          <RegistrationForm />\n        </Jumbotron>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Jumbotron, Spinner, Alert } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\n\nimport { userRegistrationVerification } from \"../../api/userApi\";\n\nimport \"./userVerfication.style.css\";\n\nconst initialResponse = {\n  status: \"\",\n  message: \"\",\n};\nexport const UserVerification = () => {\n  const { _id, email } = useParams();\n  const dt = { _id, email };\n\n  const [response, setResponse] = useState(initialResponse);\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const result = await userRegistrationVerification(dt);\n      setResponse(result);\n    };\n\n    !response.status && apiCall();\n  }, [response]);\n\n  //call api and send the _id to verify user\n\n  return (\n    <div className=\"registration-page\">\n      <div className=\"mt-5\">\n        <Jumbotron className=\"form-box\">\n          {!response.status && <Spinner variant=\"info\" animation=\"border\" />}\n\n          {response.status && (\n            <Alert\n              variant={response.status === \"success\" ? \"success\" : \"danger\"}\n            >\n              {response.message}\n            </Alert>\n          )}\n        </Jumbotron>\n      </div>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { Button } from \"react-bootstrap\";\nimport Entry from \"./pages/entry/Entry.page\";\nimport { DefaultLayout } from \"./layout/DefaultLayout\";\nimport { Dashboard } from \"./pages/dashboard/Dashboard.page\";\nimport { AddTicketPage } from \"./components/new-ticket/Addticketpage\";\nimport { TicketLists } from \"./pages/ticket-lists/TicketLists.page\";\nimport { Ticket } from \"./pages/ticket/Ticket.page\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { PrivateRoute } from \"./components/private-route/PrivateRoute.comp\";\nimport { Registration } from \"./pages/registration/Registration.page\";\nimport { UserVerification } from \"./pages/verification/UserVerification.page\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Entry />\n          </Route>\n          <Route exact path=\"/registration\">\n            <Registration />\n          </Route>\n          <Route exact path=\"/verification/:_id/:email\">\n            <UserVerification />\n          </Route>\n          <PrivateRoute path=\"/dashboard\">\n            <Dashboard />\n          </PrivateRoute>\n          <PrivateRoute path=\"/add-ticket\">\n            <AddTicketPage />\n          </PrivateRoute>\n          <PrivateRoute path=\"/tickets\">\n            <TicketLists />\n          </PrivateRoute>\n          <Route path=\"/ticket/:tId\">\n            <Ticket />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport ticketsReducer from \"./pages/ticket-lists/ticketSlice\";\nimport loginReducer from \"./components/login/Login.Slice\";\nimport userReducer from \"./pages/dashboard/userSlice\";\nimport newTicketReducer from \"./components/add-ticket-from/add-ticketSlicer\";\nimport registrationReducer from \"./components/registration-form/userRegistrationSlice\";\nconst store = configureStore({\n  reducer: {\n    tickets: ticketsReducer,\n    login: loginReducer,\n    user: userReducer,\n    openTicket: newTicketReducer,\n    registration: registrationReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}